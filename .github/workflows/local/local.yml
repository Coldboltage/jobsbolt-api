name: Dev Environment CI/CD

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: npm run test

      # - name: Run Stryker
      #   run: npx stryker run

  sentry_release:
    needs: test # Ensure this runs after 'test' job is successful
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      # Build and upload sourcemaps in one step by passing SENTRY_AUTH_TOKEN as env
      - name: Build Application with Sourcemaps
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: npm run build

  dockerBuild:
    needs: sentry_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches the full Git history

      - name: Setup Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get Branch Name
        id: branch_name
        run: |
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          echo "Branch name is $BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -f Dockerfile.local -t coldbolt/jobsbolt-api:local-latest -t coldbolt/jobsbolt-api:${{ env.BRANCH_NAME }}-local .

      - name: Push Docker Image
        run: |
          docker push coldbolt/jobsbolt-api:local-latest
          docker push coldbolt/jobsbolt-api:${{ env.BRANCH_NAME }}-local
